//	this code was made by blastcoding. Luis Gomez
//	you can use commands by prefix and enter
{
	"php": {
		"prefix": "0",
		"body": [
			"<?php ?>"
		],
		"description": "php script"
	},

	"public variable": {
		"prefix": "0pubvar",
		"body": [
			"public \\$${1:variable} = ${2:value}"
		],
		"description": "public variable"
	},

	"protected variable": {
		"prefix": "0protvar",
		"body": [
			"protected \\$${1:variable} = ${2:value}"
		],
		"description": "protected variable"
	},

	"private variable": {
		"prefix": "0privvar",
		"body": [
			"private \\$${1:variable} = ${2:value}"
		],
		"description": "private variable"
	},


	"class": {
        "prefix": "0class",
        "body": [
          	"class ${1:classname}) {",
		  	"\tfunction __construct(){",
			"\t}",
          	"}"
        ],
        "description": "class"
	},

	"function": {
        "prefix": "0func",
        "body": [
          	"function ${1:classname}() {",
		  	
          	"}"
        ],
        "description": "function"
	},

	"public function": {
        "prefix": "0pubfunc",
        "body": [
          	"public function ${1:classname}() {",
		  	
          	"}"
        ],
        "description": "public function"
	},

	"private function": {
        "prefix": "0privfunc",
        "body": [
          	"private function ${1:classname}() {",
		  	
          	"}"
        ],
        "description": "private function"
	},

	"protected function": {
        "prefix": "0protfunc",
        "body": [
          	"protected function ${1:classname}() {",
		  	
          	"}"
        ],
        "description": "protected function"
	},

	
	"define": {
		"prefix": "0define",
		"body": [
			"define(\"${1:CONSTANT_NAME}\",\"${2:constant_value}\")"
			
		],
		"description": "define('CONSTANT_NAME', 'constant_value');"
	},

	"post": {
		"prefix": "0post",
		"body": [
			"\\$_POST['${1:element}']"
			
		],
		"description": "$_POST"
	},

	"get": {
		"prefix": "0get",
		"body": [
			"\\$_GET['${1:element}']"
			
		],
		"description": "$_GET"
	},
	
	"if_start": {
		"prefix": "0if",
		"body": [
			"<?php if (\\$${1:element}) { ?>"
			
		],
		"description": "If start"
	},
	
	"Foreach_start": {
		"prefix": "0foreach",
		"body": [
			"<?php foreach (\\$${2:elements} as \\$${1:element}) { ?>"
			
		],
		"description": "Foreach start"
	},

	"For_start": {
		"prefix": "0for",
		"body": [
			"<?php for (\\$i = 0 ; \\$i < count(\\$${1:array})} ; \\$i++) { ?>"
			
		],
		"description": "For start"
	},
	
	"while_start": {
		"prefix": "0whilef",
		"body": [
			"<?php while ( \\$${2:element} = \\$${1:array}) { ?>"
			
		],
		"description": "while start"
	},

	"echo on line": {
		"prefix": "0e",
		"body": [
			"<?php echo \\$${1:} ; ?>"
		],
		"description": "echo on line"
	},

	"close in line": {
		"prefix": "0.",
		"body": [
			"<?php } ?>"
		],
		"description": "close in line"
	},

	"full if": {
		"prefix": "00if",
		"body": [
			"if(\\$${1:}){",
			"}"
		],
		"description": "full if"
	},

	"full while":{
		"prefix": "00while",
		"body":[
			"while(\\$${1:}){",
				"}"
		],
		"description": "full while"
	},

	"full for":{
		"prefix": "00for",
		"body":[
			"for(\\$${1:i = 0};\\$${2:i}<count(\\$${3:array});\\$${4:i++}){",
			"}"
		],
		"description": "full for"
	},

	"full foreach":{
		"prefix": "00foreach",
		"body":[
			"foreach(\\$${1:elements} as \\$${2:element}){",
			"}"
		],
		"description": "full foreach"
	},
	"session start":{
		"prefix": "0ss",
		"body":[
			"session_start();"
		],
		"description": "session start"
	},
	//>mysql section
	"mysqli connection":{
	"prefix": "0mysqli",
	"body":[
		"\\$servername = \"${1:servername}\";",
		"\\$username = \"${2:username}\";",
		"\\$password = \"${3:password}\";",
		"\\$database = \"${4:database}\";",

		"\\$conn = mysqli_connect(\\$servername, \\$username, \\$password,\\$database);\n",

		"if (!$conn) {",
			"\tdie(\"Connection failed: \" . mysqli_connect_error());",
		"}"
	],
		"description": "mysqli connection"
	},

	"pdo conection":{
	"prefix": "0pdo",
	"body":[
	"\\$servername = \"${1:localhost}\";",
	"\\$username = \"${2:username}\";",
	"\\$password = \"${3:password}\";",
	
	"try {",
		"\t\\$conn = new PDO(\"${4:mysql}:host=\\$servername;dbname=${5:myDB}\", \\$username, \\$password);",
		"\t\\$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);",
		"\techo \"Connected successfully\";", 
		"}",
	"catch(PDOException \\$e)",
	"{",
	"\techo \"Connection failed: \" . \\$e->getMessage();",
	"}"
	],
	"description": "pdo connection"
	},

	"session variable":{
		"prefix": "0s",
		"body":[
			"\\$_SESSION['${2:element}']"
		],
		"description": "session variable"
	},

	"date to spanish":{
		"prefix": "0dateSPN",
		"body":[
			"date('d-m-Y', strtotime(\\$${1:date}));",
		],
		"description":" date to spanish"
	},

	"date to english":{
		"prefix": "0dateENG",
		"body":[
			"date('Y-m-d', strtotime(\\$${1:date}));",
		],
		"description":" date to english"
	},

	"date to USA":{
		"prefix": "0dateUSA",
		"body":[
			"date('m-d-Y', strtotime(\\$${1:date}));",
		],
	},

	"sql select": {
		"prefix": "0sql_s",
		"body": [
			"SELECT ${2:*} FROM ${1:table_name};"
		],
		"description": "sql select"
	},

	"sql select where": {
		"prefix": "0sql_sw",
		"body": [
			"SELECT ${2:*} FROM ${1:table_name} WHERE ${3:cname}=${4:cvalue};"
		],
		"description": "sql select where"
	},

	"sql select where order by": {
		"prefix": "0sql_swo",
		"body": [
			"SELECT ${2:*} FROM ${1:table_name} WHERE ${3:cname}=${4:cvalue} ORDER BY ${4:column} $ASC $DESC;"
		],
		"description": "sql select where order by "
	},


	"sql Insert": {
		"prefix": "0sql_i",
		"body": [
			"INSERT INTO table_name (${2:column1}, ${1:column2}) VALUES (\\$${2:value1}, \\$${1:value2});"
		],
		"description": "sql insert"
	},

	"sql update": {
		"prefix": "0sql_u",
		"body": [
			"UPDATE table_name SET ${1:column1} = \\$${1:value1}, ${2:column2} = \\$${2:value2} WHERE id = \\$id ;"
		],
		"description": "sql update"
	},

	"sql delete": {
		"prefix": "0sql_d",
		"body": [
			"DELETE FROM ${1:table} WHERE ${2:column} = \\$${2:column};"
		],
		"description": "sql delete"
	},

	"db query": {
		"prefix": "0db_q",
		"body": [
			"\\$db->query(${1:query})"
		],
		"description": "db query"
	},

	"db query first": {
		"prefix": "0db_qf",
		"body": [
			"\\$db->query_first(${1:query})"
		],
		"description": "db query first"
	},
	
	"db query fetch array": {
		"prefix": "0db_qfa",
		"body": [
			"\\$db->query_fetch_array(${1:query})"
		],
		"description": "db query fetch array"
	},
	
	"multiline 2": {
		"prefix": "0ml2",
		"body": [
			"\\$${1:varaible} = ${2:value}",
			"\\$${1:varaible} = ${3:value}"
		],
		"description": "multiline 2 ( $variable =)"
	},
	"multiline 3": {
		"prefix": "0ml3",
		"body": [
			"\\$${1:varaible} = ${2:value}",
			"\\$${1:varaible} = ${3:value}",
			"\\$${1:varaible} = ${4:value}"
		],
		"description": "multiline 3 ( $variable =)"
	},
	"multiline 4": {
		"prefix": "0ml4",
		"body": [
			"\\$${1:varaible} = ${2:value};",
			"\\$${1:varaible} = ${3:value};",
			"\\$${1:varaible} = ${4:value};",
			"\\$${1:varaible} = ${5:value};"
		],
		"description": "multiline 4 ( $variable =)"
	},
	"multiline 5": {
		"prefix": "0ml5",
		"body": [
			"\\$${1:varaible} = ${2:value};",
			"\\$${1:varaible} = ${3:value};",
			"\\$${1:varaible} = ${4:value};",
			"\\$${1:varaible} = ${5:value};",
			"\\$${1:varaible} = ${6:value};"
		],
		"description": "multiline 5 ( $variable =)"
	},
	"multiline 6": {
		"prefix": "0ml6",
		"body": [
			"\\$${1:varaible} = ${2:value};",
			"\\$${1:varaible} = ${3:value};",
			"\\$${1:varaible} = ${4:value};",
			"\\$${1:varaible} = ${5:value};",
			"\\$${1:varaible} = ${6:value};",
			"\\$${1:varaible} = ${7:value};"
		],
		"description": "multiline 6 ( $variable =)"
	},
	"multiline 7": {
		"prefix": "0ml7",
		"body": [
			"\\$${1:varaible} = ${2:value};",
			"\\$${1:varaible} = ${3:value};",
			"\\$${1:varaible} = ${4:value};",
			"\\$${1:varaible} = ${5:value};",
			"\\$${1:varaible} = ${6:value};",
			"\\$${1:varaible} = ${7:value};",
			"\\$${1:varaible} = ${8:value};"
		],
		"description": "multiline 7 ( $variable =)"
	},

	"multiline 8": {
		"prefix": "0ml8",
		"body": [
			"\\$${1:varaible} = ${2:value};",
			"\\$${1:varaible} = ${3:value};",
			"\\$${1:varaible} = ${4:value};",
			"\\$${1:varaible} = ${5:value};",
			"\\$${1:varaible} = ${6:value};",
			"\\$${1:varaible} = ${7:value};",
			"\\$${1:varaible} = ${8:value};",
			"\\$${1:varaible} = ${9:value};"
		],
		"description": "multiline 8 ( $variable =)"
	},





/**____________________________________________________________________________________________________________
*			CODEIGNITER - 1
_______________________________________________________________________________________________________________*/
	"codeigniter load view": {
		"prefix": "1lv",
		"body": [
			"\\$this->load->view('${1:view_name}',\\$${2:data});"
		],
		"description": "codeigniter load view"
	},

	"codeigniter load model": {
		"prefix": "1lm",
		"body": [
			"\\$this->load->model('${1:view_name}');"
		],
		"description": "codeigniter load model"
	},

	"codeigniter pass data": {
		"prefix": "1data",
		"body": [
			"\\$data['${1:view_name}'] = \\$${2:data_value};"
		],
		"description": "codeigniter load view"
	},
	"codeigniter crud": {
		"prefix": "1crud_c",
		"body": [
			"class ${1:Your_class} extends CI_Controller {",
			"public function show(){\n\n}",
			"public function create(){\n\n}",
			"public function update(){\n\n}",
			"public function delete(){\n\n}",
			"}"
		],
		"description": "codeigniter crud"
	},
	"codeigniter model":{
		"prefix": "1model",
		"body": [
			"class ${1:News_model} extends CI_Model {",
			"\tpublic function __construct()",
				"\t{",
					"\t\t$this->load->database();",
				"\t}",
			"}"
		],
		"description": "codeigniter model"
	},







/**___________________________________________________________________________________________________________
* LARAVEL - 2
_____________________________________________________________________________________________________________*/
	"section show":{
		"prefix": "2bsecshow",
		"body": [
			"@section('${1:section_name}')",
        	"@show"
		],
		"description": "section show"
	},
	"section endsection":{
		"prefix": "2bsecend",
		"body": [
			"@section('${1:section_name}')",
        	"@endsection"
		],
		"description": "section endsection"
	},

	"yield":{
		"prefix": "2byield",
		"body": [
			"@yield('${1:name}')",
		],
		"description": "yield"
	},

	"extends":{
		"prefix": "2bextends",
		"body": [
			"@extends('${1:name}')"
		],
		"description": "extends"
	},
	// Routes
	"Route get function":{
		"prefix": "2rg_func",
		"body": [
			"Route::get('${1:name}', function () {",
			"\t${2:dosomething}",	
			"});"
		],
		"description": "route get function"
	},

	"route post function":{
		"prefix": "2rpo_func",
		"body": [
			"Route::post('${1:name}', function () {",
			"\t${2:dosomething}",	
			"});"
		],
		"description": "route post function"
	},

	"route put function":{
		"prefix": "2rput_func",
		"body": [
			"Route::put('${1:name}', function () {",
			"\t${2:dosomething}",	
			"});"
		],
		"description": "route put function"
	},

	"route patch function":{
		"prefix": "2rpa_func",
		"body": [
			"Route::patch('${1:name}', function () {",
			"\t${2:dosomething}",	
			"});"
		],
		"description": "route patch function"
	},

	"route delete function":{
		"prefix": "2rdel_func",
		"body": [
			"Route::delete('${1:name}', function () {",
			"\t${2:dosomething}",	
			"});"
		],
		"description": "route delete function"
	},

	"route option function":{
		"prefix": "2rop_func",
		"body": [
			"Route::option('${1:name}', function () {",
			"\t${2:dosomething}",	
			"});"
		],
		"description": "route option function"
	},

	"route get controller":{
		"prefix": "2rg",
		"body": [
			"Route::get('${1:name}', '${2:controller_name}@${3:controller_method}');"
		],
		"description": "route get controller"
	},

	"route post controller":{
		"prefix": "2rpost",
		"body": [
			"Route::post('${1:name}', '${2:controller_name}@${3:controller_method}');"
		],
		"description": "route post controller"
	},

	"route patch controller":{
		"prefix": "2rpatch",
		"body": [
			"Route::patch('${1:name}', '${2:controller_name}@${3:controller_method}');"
		],
		"description": "route patch controller"
	},

	"route delete controller":{
		"prefix": "2rdelete",
		"body": [
			"Route::delete('${1:name}', '${2:controller_name}@${3:controller_method}');"
		],
		"description": "route delete controller"
	},

	"route put controller":{
		"prefix": "2rput",
		"body": [
			"Route::put('${1:name}', '${2:controller_name}@${3:controller_method}');"
		],
		"description": "route put controller"
	},

	"route option controller":{
		"prefix": "2roption",
		"body": [
			"Route::option('${1:name}', '${2:controller_name}@${3:controller_method}');"
		],
		"description": "route option controller"
	},

}